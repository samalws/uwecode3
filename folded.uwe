{basics}
{nat}
{nFuncs}
0 _= const
2 _= f -> x -> f (f x)
[folded t: (t -> a -> a) -> a -> a]
emptyFolded = ignore
consFolded = h -> r -> f -> g -> f h `id f r g
mapFolded = f -> nRev 2 (consFolded `comp f) emptyFolded
filterFolded = f -> nRev 2 (h -> r -> f h (h `consFolded r) r) emptyFolded
lenFolded = nRev 2 succNat 0
