{basics}
{tup}
{parser}
{enclosedParser}
{ast}
{string}
2 _= f -> x -> f (f x)
[TODO wordParser]
commentParser = charParser (String->Char "[") `appendParser manyParser (nonCharParser "]") `appendParser charParser (String->Char "]")
spaceSeparatedParser = p1 -> p2 -> (p1 `appendParser (many1Parser (spaceParser `appendParser commentParser) `appendParser spaceParser) `appendParser p2) `mapParser rev a -> rev b -> c -> a `tup c
funcParser = expParser -> wordParser `spaceSeparatedParser stringParser "->" `spaceSeparatedParser expParser
infixCallParser = expParserBig -> expParserSmall -> (expParserSmall `spaceSeparatedParser (charParser (String->Char "`") `appendParser wordParser) `spaceSeparatedParser expParserBig) `mapParser rev x -> rev m -> y -> m _ -> f -> called f x `called y
varParser = wordParser `mapParser var
calledParser = expParser -> (expParser `spaceSeparatedParser expParser) `mapParser rev called
parenParser = expParser -> (charParser (String->Char "(") `appendParser expParser `appendParser charParser (String->Char ")")) `appendParser getTup 2 [TODO maybe space at beginning and end]
[stringParser = expParser -> TODO]
standardExpressionParser = VarAst->Ast `mapParser fix selfBig -> (selfSmall -> funcParser selfBig `choiceParser infixCallParser selfBig selfSmall `choiceParser selfSmall) `id varParser `choiceParser calledParser selfBig `choiceParser parenParser selfBig
